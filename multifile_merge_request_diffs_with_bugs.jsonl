[
  {
  "diff": "diff --git a/README.md b/README.md\nindex 3c4e0d1..4b825dc 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,4 +1,6 @@\n# Hello World\n\nThis is a sample project.\n+\n+New line added in pull request #1347.\n\ndiff --git a/app.py b/app.py\nnew file mode 100644\nindex 0000000..e69de29\n--- /dev/null\n+++ b/app.py\n@@ -0,0 +1,5 @@\n+def hello():\n+    print(\"Hello, world!\")\n+\n+if __name__ == \"__main__\":\n+    hello()\n",
  "bugs": [
    {
      "ticket_id": "BUG-2001",
      "title": "README formatting issue",
      "description": "Extra newline introduced in README.",
      "rca": "Unintended newline added during documentation update."
    },
    {
      "ticket_id": "BUG-2002",
      "title": "New file missing tests",
      "description": "app.py was added without corresponding unit tests.",
      "rca": "No test coverage for new functionality."
    }
  ]
},
{
  "diff": "diff --git a/server.py b/server.py\nindex 7f8e9d0..a1b2c3d 100644\n--- a/server.py\n+++ b/server.py\n@@ -58,7 +58,8 @@ def handle_request(req):\n-    user = db.get_user(req.user_id)\n+    user = db.get_user(req.user_id)\n+    if user is None:\n+        return 'User not found', 404\n\ndiff --git a/config.py b/config.py\nindex 2345678..9abcdef 100644\n--- a/config.py\n+++ b/config.py\n@@ -3,7 +3,8 @@ def load_config(path):\n-    with open(path) as f:\n-        return yaml.safe_load(f)\n+    try:\n+        with open(path) as f:\n+            return yaml.safe_load(f)\n+    except FileNotFoundError:\n+        return {},\n",
  "bugs": [
    {
      "ticket_id": "BUG-2003",
      "title": "Server 500 on unknown user",
      "description": "Server returned 500 error instead of 404 when user not found.",
      "rca": "Missing user existence check. Now returns 404 if user not found."
    },
    {
      "ticket_id": "BUG-2004",
      "title": "Crash on missing config file",
      "description": "App crashed when config file was missing.",
      "rca": "No handling for missing config file. Added try/except for FileNotFoundError."
    }
  ]
},
{
  "diff": "diff --git a/processor.py b/processor.py\nindex 3456789..abcdef0 100644\n--- a/processor.py\n+++ b/processor.py\n@@ -21,7 +21,8 @@ def process(items):\n-    for item in items:\n-        total += item.value\n+    for item in items or []:\n+        total += item.value\n\ndiff --git a/cli.py b/cli.py\nindex 456789a..bcdef01 100644\n--- a/cli.py\n+++ b/cli.py\n@@ -5,7 +5,8 @@ def main():\n-    print('Welcome!')\n+    print('Welcome!')\n+    sys.stdout.flush()\n",
  "bugs": [
    {
      "ticket_id": "BUG-2005",
      "title": "TypeError when items is None",
      "description": "Did not check for None before iterating in processor.",
      "rca": "Used 'items or []' to avoid error."
    },
    {
      "ticket_id": "BUG-2006",
      "title": "Output buffering in CLI",
      "description": "Output not shown immediately in some environments.",
      "rca": "Buffering caused output delays. Added flush to ensure prompt display."
    }
  ]
}
]
